package minecraft.nbt.modifier.uuid;

import utils.Request;
import utils.Utils;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.UUID;

public class MinecraftUUIDGenerator {
    private static final String uuidGeneratorUrl = "https://www.uuidtools.com/api/generate/v4";

    public static String get() {
        if (Utils.isNetworkAvailable(3000)) {
            // Use the website in case of network generation.
            String data = null;
            try {
                data = Request.get(new URI(uuidGeneratorUrl).toURL());
            } catch (MalformedURLException | URISyntaxException e) {
                throw new RuntimeException(e);
            }

            if (data != null) {
                // Dispose of the two middle brackets before and after.
                data = data.substring(2, data.length() - 2);

                return convertUUIDToMinecraftFormat(UUID.fromString(data));
            }
        } else {
            // Generated by random numbers when there is no network.
            return convertUUIDToMinecraftFormat(UUID.randomUUID());
        }

        return null;
    }

    public static String convertUUIDToMinecraftFormat(UUID uuid) {
        // Get the high 64-bit and low 64-bit UUID.
        long high64 = uuid.getMostSignificantBits();
        long low64 = uuid.getLeastSignificantBits();

        // Split the high 64 bits into two 32-bit integers.
        int high64High32 = (int) (high64 >> 32);
        int high64Low32 = (int) (high64 & 0xFFFFFFFFL);

        // Split the lower 64 bits into two 32-bit integers.
        int low64High32 = (int) (low64 >> 32);
        int low64Low32 = (int) (low64 & 0xFFFFFFFFL);

        return String.format("[I;%d,%d,%d,%d]", high64High32, high64Low32, low64High32, low64Low32);
    }
}
